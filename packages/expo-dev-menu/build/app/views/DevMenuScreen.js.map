{"version":3,"file":"DevMenuScreen.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuScreen.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,QAAQ,MAAM,yBAAyB,CAAC;AAE/C,OAAO,WAAW,MAAM,2BAA2B,CAAC;AAEpD,MAAM,cAAc,GAAG,EAAE,CAAC;AAM1B,MAAM,CAAC,OAAO,OAAO,aAAc,SAAQ,KAAK,CAAC,aAAoB;IAArE;;QACE,yBAAoB,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAS,KAAK,CAAC,CAAC;QACzD,cAAS,GAAG,KAAK,CAAC;QAElB,oBAAe,GAAG,CAAC,MAAc,EAAE,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAErD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,MAAM,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,MAAM,GAAG,cAAc,CAAC,CAAC;gBAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;QACH,CAAC,CAAC;IAaJ,CAAC;IAXC,MAAM;QACJ,MAAM,EAAE,eAAe,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEjD,OAAO,CACL,oBAAC,QAAQ,CAAC,IAAI,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7E,oBAAC,WAAW,IAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe;gBAC5D,oBAAC,eAAe,oBAAK,KAAK,EAAI,CAClB,CACA,CACjB,CAAC;IACJ,CAAC;CACF;AAED,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAC/B,SAAS,EAAE;QACT,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport LayoutRuler from '../components/LayoutRuler';\n\nconst BOTTOM_PADDING = 40;\n\ntype Props = {\n  ScreenComponent: React.ComponentType;\n};\n\nexport default class DevMenuScreen extends React.PureComponent<Props> {\n  containerHeightValue = new Animated.Value<number>(10000);\n  heightSet = false;\n\n  onHeightMeasure = (height: number) => {\n    console.log(this.props.ScreenComponent.name, height);\n\n    if (!this.heightSet && height > 0) {\n      this.containerHeightValue.setValue(height + BOTTOM_PADDING);\n      this.heightSet = true;\n    }\n  };\n\n  render() {\n    const { ScreenComponent, ...props } = this.props;\n\n    return (\n      <Animated.View style={[styles.container, { height: this.containerHeightValue }]}>\n        <LayoutRuler property=\"height\" onMeasure={this.onHeightMeasure}>\n          <ScreenComponent {...props} />\n        </LayoutRuler>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: BOTTOM_PADDING,\n  },\n});\n"]}