{"version":3,"file":"DevMenuItemsList.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuItemsList.tsx"],"names":[],"mappings":"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","sourcesContent":["import { NavigationContext } from '@react-navigation/native';\nimport React from 'react';\nimport { StyleSheet, PixelRatio, View } from 'react-native';\n\nimport DevMenuContext from '../DevMenuContext';\nimport {\n  DevMenuItemAnyType,\n  DevMenuItemEnum,\n  DevMenuItemActionType,\n  dispatchActionAsync,\n} from '../DevMenuInternal';\nimport { StyledView } from '../components/Views';\nimport Colors from '../constants/Colors';\nimport DevMenuButton from './DevMenuButton';\n\ntype Props = {\n  items: DevMenuItemAnyType[];\n};\n\ntype ItemProps<ItemType = DevMenuItemAnyType> = {\n  item: ItemType;\n};\n\nclass DevMenuItem extends React.PureComponent<ItemProps> {\n  render() {\n    const { item } = this.props;\n\n    switch (item.type) {\n      case DevMenuItemEnum.ACTION:\n        return <DevMenuItemAction item={item} />;\n      case DevMenuItemEnum.GROUP:\n        return <DevMenuItemsList items={item.items} />;\n      default:\n        return null;\n    }\n  }\n}\n\nclass DevMenuItemAction extends React.PureComponent<ItemProps<DevMenuItemActionType>> {\n  static contextType = DevMenuContext;\n\n  action = (...args) => {\n    dispatchActionAsync(...args);\n    this.context?.collapse?.();\n  };\n\n  render() {\n    const { actionId, isAvailable, label, detail, glyphName } = this.props.item;\n\n    return (\n      <StyledView\n        style={styles.itemWrapper}\n        lightBackgroundColor={Colors.light.secondaryBackground}\n        lightBorderColor={Colors.light.border}\n        darkBackgroundColor={Colors.dark.secondaryBackground}\n        darkBorderColor={Colors.dark.border}>\n        <DevMenuButton\n          buttonKey={actionId}\n          label={label || ''}\n          onPress={this.action}\n          icon={glyphName}\n          isEnabled={isAvailable}\n          detail={detail || ''}\n        />\n      </StyledView>\n    );\n  }\n}\n\nclass DevMenuItemNavigation extends React.PureComponent<{\n  route: string;\n  label: string;\n  glyphName: string;\n}> {\n  static contextType = NavigationContext;\n\n  action = () => {\n    this.context.push(this.props.route);\n  };\n\n  render() {\n    const { route, label, glyphName } = this.props;\n\n    return (\n      <StyledView\n        style={styles.itemWrapper}\n        lightBackgroundColor={Colors.light.secondaryBackground}\n        lightBorderColor={Colors.light.border}\n        darkBackgroundColor={Colors.dark.secondaryBackground}\n        darkBorderColor={Colors.dark.border}>\n        <DevMenuButton\n          buttonKey={route}\n          label={label || ''}\n          onPress={this.action}\n          icon={glyphName}\n        />\n      </StyledView>\n    );\n  }\n}\n\nexport default class DevMenuItemsList extends React.PureComponent<Props> {\n  render() {\n    const { items } = this.props;\n\n    return (\n      <View>\n        <View style={styles.group}>\n          {items.map((item, index) => (\n            <DevMenuItem key={index} item={item} />\n          ))}\n        </View>\n        <View style={styles.group}>\n          <DevMenuItemNavigation route=\"Settings\" label=\"Settings\" glyphName=\"settings-outline\" />\n          <DevMenuItemNavigation\n            route=\"Test\"\n            label=\"Navigation and scroll test\"\n            glyphName=\"test-tube\"\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst pixel = 2 / PixelRatio.get();\n\nconst styles = StyleSheet.create({\n  group: {\n    marginBottom: 10,\n    marginHorizontal: -pixel,\n  },\n  itemWrapper: {\n    borderTopWidth: pixel,\n    borderBottomWidth: pixel,\n    marginTop: -pixel,\n  },\n});\n"]}