{"version":3,"file":"DevMenuView.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Clipboard, StyleSheet, PixelRatio, View } from 'react-native';\n\nimport DevMenuContext, { Context } from '../DevMenuContext';\nimport * as DevMenuInternal from '../DevMenuInternal';\nimport { StyledText } from '../components/Text';\nimport { StyledView } from '../components/Views';\nimport Colors from '../constants/Colors';\nimport DevMenuItemsList from './DevMenuItemsList';\nimport DevMenuTaskInfo from './DevMenuTaskInfo';\n\ntype Props = {\n  appInfo: { [key: string]: any };\n  uuid: string;\n  devMenuItems: DevMenuInternal.DevMenuItemAnyType[];\n  enableDevelopmentTools: boolean;\n  showOnboardingView: boolean;\n};\n\nclass DevMenuView extends React.PureComponent<Props, undefined> {\n  static contextType = DevMenuContext;\n\n  context!: Context;\n\n  collapse = () => {\n    this.context?.collapse?.();\n  };\n\n  onCopyTaskUrl = () => {\n    const { manifestUrl } = this.props.appInfo;\n\n    this.collapse();\n    Clipboard.setString(manifestUrl);\n    alert(`Copied \"${manifestUrl}\" to the clipboard!`);\n  };\n\n  renderItems() {\n    const { appInfo } = this.props;\n    const items: DevMenuInternal.DevMenuItemAnyType[] = [];\n\n    items.push({\n      type: DevMenuInternal.DevMenuItemEnum.ACTION,\n      isAvailable: true,\n      isEnabled: true,\n      label: 'Reload',\n      actionId: 'reload',\n      glyphName: 'reload',\n    });\n\n    if (appInfo && appInfo.manifestUrl) {\n      items.push({\n        type: DevMenuInternal.DevMenuItemEnum.ACTION,\n        isAvailable: true,\n        isEnabled: true,\n        label: 'Copy link to clipboard',\n        actionId: 'copy',\n        glyphName: 'clipboard-text',\n      });\n    }\n\n    items.push({\n      type: DevMenuInternal.DevMenuItemEnum.ACTION,\n      isAvailable: true,\n      isEnabled: true,\n      label: 'Go to Home',\n      actionId: 'home',\n      glyphName: 'home',\n    });\n\n    if (this.context.enableDevelopmentTools && this.context.devMenuItems) {\n      items.push(...this.context.devMenuItems);\n    }\n    return <DevMenuItemsList items={items} />;\n  }\n\n  renderContent() {\n    const { appInfo } = this.props;\n\n    return (\n      <>\n        <StyledView\n          style={styles.appInfo}\n          lightBackgroundColor={Colors.light.secondaryBackground}\n          darkBackgroundColor={Colors.dark.secondaryBackground}>\n          <DevMenuTaskInfo task={appInfo} />\n        </StyledView>\n\n        <View style={styles.itemsContainer}>{this.renderItems()}</View>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        {this.renderContent()}\n        {/* Enable this to test scrolling\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()}\n        {this.renderContent()} */}\n\n        <View style={styles.footer}>\n          <StyledText\n            style={styles.footerText}\n            lightColor={Colors.light.menuItemText}\n            darkColor={Colors.dark.menuItemText}>\n            This development menu will not be present in any release builds of this project.\n          </StyledText>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  appInfo: {\n    borderBottomWidth: 2 / PixelRatio.get(),\n  },\n  itemsContainer: {\n    marginTop: 10,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: 12,\n    top: 12,\n    zIndex: 3, // should be higher than zIndex of onboarding container\n  },\n  footer: {\n    paddingHorizontal: 20,\n  },\n  footerText: {\n    fontSize: 12,\n  },\n});\n\nexport default DevMenuView;\n"]}