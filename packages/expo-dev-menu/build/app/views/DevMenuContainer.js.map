{"version":3,"file":"DevMenuContainer.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { EventSubscription, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport DevMenuContext from '../DevMenuContext';\nimport * as DevMenuInternal from '../DevMenuInternal';\nimport DevMenuMainScreen from '../screens/DevMenuMainScreen';\nimport DevMenuSettingsScreen from '../screens/DevMenuSettingsScreen';\nimport DevMenuTestScreen from '../screens/DevMenuTestScreen';\nimport DevMenuBottomSheet from './DevMenuBottomSheet';\nimport DevMenuOnboarding from './DevMenuOnboarding';\n\ntype Props = {\n  uuid: string;\n  showOnboardingView: boolean;\n};\n\nconst { call, cond, eq, onChange } = Animated;\n\n// @refresh\nexport default class DevMenuContainer extends React.PureComponent<Props, any> {\n  ref = React.createRef<DevMenuBottomSheet>();\n\n  snapPoints = [0, '60%', '75%', '90%'];\n\n  callbackNode = new Animated.Value(0);\n\n  backgroundOpacity = this.callbackNode.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.5],\n  });\n\n  closeSubscription: EventSubscription | null = null;\n\n  componentDidMount() {\n    this.expand();\n\n    // Before the dev menu can be actually closed, we need to collapse its sheet view,\n    // and this listens for close requests that come from native side to start collapsing the view.\n    this.closeSubscription = DevMenuInternal.subscribeToCloseEvents(() => {\n      // Collapse the bottom sheet. `onCloseEnd` will be called once it ends.\n      this.collapse();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Make sure it gets expanded once we receive new identifier.\n    if (prevProps.uuid !== this.props.uuid) {\n      this.expand();\n    }\n  }\n\n  componentWillUnmount() {\n    this.closeSubscription?.remove(); // eslint-disable-line no-unused-expressions\n    this.closeSubscription = null;\n  }\n\n  collapse = () => {\n    this.ref.current?.snapTo(0); // eslint-disable-line no-unused-expressions\n  };\n\n  expand = () => {\n    this.ref.current?.snapTo(1); // eslint-disable-line no-unused-expressions\n  };\n\n  onCloseEnd = () => {\n    DevMenuInternal.hideMenu();\n  };\n\n  providedContext = {\n    expand: this.expand,\n    collapse: this.collapse,\n  };\n\n  trackCallbackNode = onChange(\n    this.callbackNode,\n    cond(eq(this.callbackNode, 0), call([], this.onCloseEnd))\n  );\n\n  screens = [\n    {\n      name: 'Main',\n      component: DevMenuMainScreen,\n      options: DevMenuMainScreen.navigationOptions,\n    },\n    {\n      name: 'Settings',\n      component: DevMenuSettingsScreen,\n      options: DevMenuSettingsScreen.navigationOptions,\n    },\n    {\n      name: 'Test',\n      component: DevMenuTestScreen,\n      options: DevMenuTestScreen.navigationOptions,\n    },\n  ];\n\n  render() {\n    const providedContext = {\n      ...this.props,\n      ...this.providedContext,\n    };\n\n    return (\n      <DevMenuContext.Provider value={providedContext}>\n        <View style={styles.bottomSheetContainer}>\n          <TouchableWithoutFeedback onPress={this.collapse}>\n            <Animated.View\n              style={[styles.bottomSheetBackground, { opacity: this.backgroundOpacity }]}\n            />\n          </TouchableWithoutFeedback>\n          <DevMenuBottomSheet\n            ref={this.ref}\n            initialSnap={0}\n            snapPoints={this.snapPoints}\n            callbackNode={this.callbackNode}\n            screens={this.screens}>\n            <DevMenuOnboarding show={this.props.showOnboardingView} />\n          </DevMenuBottomSheet>\n        </View>\n        <Animated.Code exec={this.trackCallbackNode} />\n      </DevMenuContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bottomSheetContainer: {\n    flex: 1,\n  },\n  bottomSheetBackground: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n});\n"]}