{"version":3,"file":"DevMenuButton.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport React from 'react';\nimport { Platform, StyleSheet, TouchableOpacity as TouchableOpacityRN, View } from 'react-native';\nimport { TouchableOpacity as TouchableOpacityGH } from 'react-native-gesture-handler';\n\nimport { StyledText } from '../components/Text';\nimport { StyledIcon } from '../components/Views';\nimport Colors from '../constants/Colors';\n\ntype Props = {\n  buttonKey: string;\n  label: string;\n  onPress: (key: string) => any;\n  icon?: string | null;\n  isEnabled?: boolean;\n  detail?: string;\n};\n\n// When rendered inside bottom sheet, touchables from RN don't work on Android, but the ones from GH don't work on iOS.\nconst TouchableOpacity = Platform.OS === 'android' ? TouchableOpacityGH : TouchableOpacityRN;\n\nconst LIGHT_DISABLED_TEXT_COLOR = '#9ca0a6';\nconst DARK_DISABLED_TEXT_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nclass DevMenuButton extends React.PureComponent<Props, any> {\n  static defaultProps = {\n    isEnabled: true,\n  };\n\n  state = {\n    showDetails: true,\n  };\n\n  onPress = () => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.buttonKey);\n    }\n  };\n\n  renderButtonIcon(icon: string | undefined, isEnabled: boolean) {\n    if (!icon) {\n      return null;\n    }\n\n    return (\n      <View style={styles.buttonIcon}>\n        <StyledIcon component={MaterialCommunityIcons} name={icon} size={22} color=\"menuItemText\" />\n      </View>\n    );\n  }\n\n  renderLabel(label: string, enabled: boolean) {\n    if (enabled) {\n      return (\n        <StyledText\n          style={styles.buttonText}\n          lightColor={Colors.light.menuItemText}\n          darkColor={Colors.dark.menuItemText}>\n          {label}\n        </StyledText>\n      );\n    } else {\n      return (\n        <StyledText\n          style={styles.buttonText}\n          lightColor={LIGHT_DISABLED_TEXT_COLOR}\n          darkColor={DARK_DISABLED_TEXT_COLOR}>\n          {label}\n        </StyledText>\n      );\n    }\n  }\n\n  renderDetail(detail?: string) {\n    return (\n      <StyledText\n        style={[styles.buttonText, styles.buttonDetailsText]}\n        darkColor={DARK_DISABLED_TEXT_COLOR}\n        lightColor={LIGHT_DISABLED_TEXT_COLOR}>\n        {detail ? detail : 'Only available in development mode.'}\n      </StyledText>\n    );\n  }\n\n  render() {\n    const { label, icon, isEnabled, detail } = this.props;\n    const { showDetails } = this.state;\n\n    return (\n      <TouchableOpacity style={styles.button} onPress={this.onPress} disabled={!isEnabled} activeOpacity={0.6}>\n        {this.renderButtonIcon(icon, !!isEnabled)}\n\n        <View style={styles.buttonRow}>\n          {this.renderLabel(label, !!isEnabled)}\n          {!isEnabled && showDetails && this.renderDetail(detail)}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    paddingHorizontal: 8,\n    paddingVertical: 12,\n  },\n  buttonRow: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start',\n  },\n  buttonIcon: {\n    marginHorizontal: 14,\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'left',\n  },\n  buttonDetailsText: {\n    marginTop: 1,\n    fontSize: 12,\n    fontWeight: 'normal',\n  },\n});\n\nexport default DevMenuButton;\n"]}